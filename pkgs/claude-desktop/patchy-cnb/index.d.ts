/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export declare function sum(a: number, b: number): number
export const enum KeyboardKey {
  Num0 = 0,
  Num1 = 1,
  Num2 = 2,
  Num3 = 3,
  Num4 = 4,
  Num5 = 5,
  Num6 = 6,
  Num7 = 7,
  Num8 = 8,
  Num9 = 9,
  A = 10,
  B = 11,
  C = 12,
  D = 13,
  E = 14,
  F = 15,
  G = 16,
  H = 17,
  I = 18,
  J = 19,
  K = 20,
  L = 21,
  M = 22,
  N = 23,
  O = 24,
  P = 25,
  Q = 26,
  R = 27,
  S = 28,
  T = 29,
  U = 30,
  V = 31,
  W = 32,
  X = 33,
  Y = 34,
  Z = 35,
  AbntC1 = 36,
  AbntC2 = 37,
  Accept = 38,
  Add = 39,
  Alt = 40,
  Apps = 41,
  Attn = 42,
  Backspace = 43,
  Break = 44,
  Begin = 45,
  BrightnessDown = 46,
  BrightnessUp = 47,
  BrowserBack = 48,
  BrowserFavorites = 49,
  BrowserForward = 50,
  BrowserHome = 51,
  BrowserRefresh = 52,
  BrowserSearch = 53,
  BrowserStop = 54,
  Cancel = 55,
  CapsLock = 56,
  Clear = 57,
  Command = 58,
  ContrastUp = 59,
  ContrastDown = 60,
  Control = 61,
  Convert = 62,
  Crsel = 63,
  DBEAlphanumeric = 64,
  DBECodeinput = 65,
  DBEDetermineString = 66,
  DBEEnterDLGConversionMode = 67,
  DBEEnterIMEConfigMode = 68,
  DBEEnterWordRegisterMode = 69,
  DBEFlushString = 70,
  DBEHiragana = 71,
  DBEKatakana = 72,
  DBENoCodepoint = 73,
  DBENoRoman = 74,
  DBERoman = 75,
  DBESBCSChar = 76,
  DBESChar = 77,
  Decimal = 78,
  Delete = 79,
  Divide = 80,
  DownArrow = 81,
  Eject = 82,
  End = 83,
  Ereof = 84,
  Escape = 85,
  Execute = 86,
  Excel = 87,
  F1 = 88,
  F2 = 89,
  F3 = 90,
  F4 = 91,
  F5 = 92,
  F6 = 93,
  F7 = 94,
  F8 = 95,
  F9 = 96,
  F10 = 97,
  F11 = 98,
  F12 = 99,
  F13 = 100,
  F14 = 101,
  F15 = 102,
  F16 = 103,
  F17 = 104,
  F18 = 105,
  F19 = 106,
  F20 = 107,
  F21 = 108,
  F22 = 109,
  F23 = 110,
  F24 = 111,
  F25 = 112,
  F26 = 113,
  F27 = 114,
  F28 = 115,
  F29 = 116,
  F30 = 117,
  F31 = 118,
  F32 = 119,
  F33 = 120,
  F34 = 121,
  F35 = 122,
  Function = 123,
  Final = 124,
  Find = 125,
  GamepadA = 126,
  GamepadB = 127,
  GamepadDPadDown = 128,
  GamepadDPadLeft = 129,
  GamepadDPadRight = 130,
  GamepadDPadUp = 131,
  GamepadLeftShoulder = 132,
  GamepadLeftThumbstickButton = 133,
  GamepadLeftThumbstickDown = 134,
  GamepadLeftThumbstickLeft = 135,
  GamepadLeftThumbstickRight = 136,
  GamepadLeftThumbstickUp = 137,
  GamepadLeftTrigger = 138,
  GamepadMenu = 139,
  GamepadRightShoulder = 140,
  GamepadRightThumbstickButton = 141,
  GamepadRightThumbstickDown = 142,
  GamepadRightThumbstickLeft = 143,
  GamepadRightThumbstickRight = 144,
  GamepadRightThumbstickUp = 145,
  GamepadRightTrigger = 146,
  GamepadView = 147,
  GamepadX = 148,
  GamepadY = 149,
  Hangeul = 150,
  Hangul = 151,
  Hanja = 152,
  Help = 153,
  Home = 154,
  Ico00 = 155,
  IcoClear = 156,
  IcoHelp = 157,
  IlluminationDown = 158,
  IlluminationUp = 159,
  IlluminationToggle = 160,
  IMEOff = 161,
  IMEOn = 162,
  Insert = 163,
  Junja = 164,
  Kana = 165,
  Kanji = 166,
  LaunchApp1 = 167,
  LaunchApp2 = 168,
  LaunchMail = 169,
  LaunchMediaSelect = 170,
  Launchpad = 171,
  LaunchPanel = 172,
  LButton = 173,
  LControl = 174,
  LeftArrow = 175,
  Linefeed = 176,
  LMenu = 177,
  LShift = 178,
  LWin = 179,
  MButton = 180,
  MediaFast = 181,
  MediaNextTrack = 182,
  MediaPlayPause = 183,
  MediaPrevTrack = 184,
  MediaRewind = 185,
  MediaStop = 186,
  Meta = 187,
  MissionControl = 188,
  ModeChange = 189,
  Multiply = 190,
  NavigationAccept = 191,
  NavigationCancel = 192,
  NavigationDown = 193,
  NavigationLeft = 194,
  NavigationMenu = 195,
  NavigationRight = 196,
  NavigationUp = 197,
  NavigationView = 198,
  NoName = 199,
  NonConvert = 200,
  None = 201,
  Numlock = 202,
  Numpad0 = 203,
  Numpad1 = 204,
  Numpad2 = 205,
  Numpad3 = 206,
  Numpad4 = 207,
  Numpad5 = 208,
  Numpad6 = 209,
  Numpad7 = 210,
  Numpad8 = 211,
  Numpad9 = 212,
  OEM1 = 213,
  OEM102 = 214,
  OEM2 = 215,
  OEM3 = 216,
  OEM4 = 217,
  OEM5 = 218,
  OEM6 = 219,
  OEM7 = 220,
  OEM8 = 221,
  OEMAttn = 222,
  OEMAuto = 223,
  OEMAx = 224,
  OEMBacktab = 225,
  OEMClear = 226,
  OEMComma = 227,
  OEMCopy = 228,
  OEMCusel = 229,
  OEMEnlw = 230,
  OEMFinish = 231,
  OEMFJJisho = 232,
  OEMFJLoya = 233,
  OEMFJMasshou = 234,
  OEMFJRoya = 235,
  OEMFJTouroku = 236,
  OEMJump = 237,
  OEMMinus = 238,
  OEMNECEqual = 239,
  OEMPA1 = 240,
  OEMPA2 = 241,
  OEMPA3 = 242,
  OEMPeriod = 243,
  OEMPlus = 244,
  OEMReset = 245,
  OEMWsctrl = 246,
  Option = 247,
  PA1 = 248,
  Packet = 249,
  PageDown = 250,
  PageUp = 251,
  Pause = 252,
  Play = 253,
  Power = 254,
  Print = 255,
  Processkey = 256,
  RButton = 257,
  RCommand = 258,
  RControl = 259,
  Redo = 260,
  Return = 261,
  RightArrow = 262,
  RMenu = 263,
  ROption = 264,
  RShift = 265,
  RWin = 266,
  Scroll = 267,
  ScrollLock = 268,
  Select = 269,
  ScriptSwitch = 270,
  Separator = 271,
  Shift = 272,
  ShiftLock = 273,
  Sleep = 274,
  Snapshot = 275,
  Space = 276,
  Subtract = 277,
  Super = 278,
  SysReq = 279,
  Tab = 280,
  Undo = 281,
  UpArrow = 282,
  VidMirror = 283,
  VolumeDown = 284,
  VolumeMute = 285,
  VolumeUp = 286,
  MicMute = 287,
  Windows = 288,
  XButton1 = 289,
  XButton2 = 290,
  Zoom = 291
}
export const enum ScrollDirection {
  Down = 0,
  Up = 1
}
export const enum MouseButton {
  Left = 0,
  Middle = 1,
  Right = 2
}
export const enum RequestAccessibilityOptions {
  ShowDialog = 0,
  OnlyRegisterInSettings = 1
}
export declare function requestAccessibility(options: number): boolean
export declare function getWindowInfo(): Array<WindowInfo>
export declare function getActiveWindowHandle(): number
export declare function getMonitorInfo(): MonitorInfo
export declare function focusWindow(handle: number): void
export class MousePosition {
  x: number
  y: number
}
export class MonitorInfo {
  x: number
  y: number
  width: number
  height: number
  monitorName: string
  isPrimary: boolean
}
export class WindowInfo {
  handle: number
  processId: number
  executablePath: string
  title: string
  x: number
  y: number
  width: number
  height: number
}
export class InputEmulator {
  
  constructor()
  copy(): void
  cut(): void
  paste(): void
  undo(): void
  selectAll(): void
  held(): Array<number>
  pressChars(text: string): void
  pressKey(key: Array<number>): void
  static pressThenReleaseKey(key: Array<number>): void
  releaseChars(text: string): void
  releaseKey(key: number): void
  setButtonClick(button: number): void
  setButtonToggle(button: number): void
  getMousePosition(): MousePosition
  typeText(text: string): void
  setMouseScroll(direction: number, amount: number): void
}
